@using Frontend.Pages
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject HttpClient Http
@inject Site Site

@foreach(var item in items) 
{
    var itemUrl = item.Url.ToString();
    itemUrl = itemUrl.Replace(Site.Url, "/");

    <NavLink class="@LinkClass" ActiveClass="@LinkActiveClass" href="@itemUrl" Match="@(itemUrl == "/" ? NavLinkMatch.All : NavLinkMatch.Prefix)">
        @item.Title
    </NavLink>
}

@code {
    IEnumerable<MenuItem> items = Array.Empty<MenuItem>();

    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public string LinkClass { get; set; }

    [Parameter]
    public string LinkActiveClass { get; set; } = "active";

    protected override async Task OnInitializedAsync() 
    {
         var wordpressUrl = Configuration.GetServiceUri("app");
        items = await Http.GetFromJsonAsync<MenuItem[]>($"{wordpressUrl}/wp-json/wp/v2/menus/{Name}");
    }
}
