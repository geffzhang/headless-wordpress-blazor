@page "/{*slug}"
@inject WordPressClient WordPressClient

@if (notFound)
{
    <PageNotFound />
}
else
{
    @if (post != null)
    {
        <Title>@post.Title.Rendered - @Site.Title</Title>

        <h1>@post.Title.Rendered</h1>
        
        <small class="text-muted">@post.Date @post.Embedded.Author.Select(x => x.Name).First()</small>

        <div>@((MarkupString)post.Content.Rendered)</div>
    }
}

@code {
    private Post post;
    private bool loadingError;
    private bool notFound;

    [Parameter]
    public string Slug { get; set; }

    protected override async Task OnInitializedAsync()
    {
        notFound = false;
        loadingError = false;

        try
        {
            var queryBuilder = new PostsQueryBuilder();
            queryBuilder.Slugs = new[] { Slug };
            queryBuilder.Statuses = new[] { Status.Publish };
            queryBuilder.Embed = true;

            var results = await WordPressClient.Posts.Query(queryBuilder);

            notFound = !results.Any();

            if (notFound) return;
            post = results.Single();
        }
        catch (WordPressPCL.Models.Exceptions.WPException)
        {
            notFound = true;
        }
        catch (Exception)
        {
            loadingError = true;
            return;
        }
    }
}
